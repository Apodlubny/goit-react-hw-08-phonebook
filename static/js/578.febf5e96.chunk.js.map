{"version":3,"file":"static/js/578.febf5e96.chunk.js","mappings":"kYAkBMA,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAEKC,EAAY,mCAAG,WAAMC,GAAN,wEACnBA,EAAEC,iBADiB,SAEbb,EAASc,EAAAA,GAAAA,MAAqB,CAAEX,MAAAA,EAAOE,SAAAA,KAF1B,OAGnBD,EAAS,IACTE,EAAY,IAJO,2CAAH,sDAMlB,OACE,SAACS,EAAA,EAAD,CAAelB,MAAOA,EAAtB,UACE,UAACmB,EAAA,GAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,GAAI,CAAEC,OAAQ,SAA9C,WACE,SAACC,EAAA,GAAD,KAEA,SAACL,EAAA,GAAD,CACEM,OAAO,SACPC,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJR,UAAWS,EAAAA,EACXC,UAAW,EACXT,GAAI,CACFU,gBAAiB,WAEnBC,QAAM,EAXR,UAaE,UAACC,EAAA,EAAD,CACEZ,GAAI,CACFa,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UANhB,WASE,SAACC,EAAA,EAAD,CAAQlB,GAAI,CAAEmB,EAAG,EAAGC,QAAS,WAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYvB,UAAU,KAAKwB,QAAQ,KAAnC,qBAGA,UAACX,EAAA,EAAD,CACEb,UAAU,OACVyB,YAAU,EACVC,SAAUjC,EACVQ,GAAI,CAAE0B,GAAI,GAJZ,WAME,SAACC,EAAA,EAAD,CACExB,OAAO,SACPyB,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNzC,KAAK,QACL0C,aAAa,QACbC,WAAS,EACTC,SAAU9C,KAEZ,SAACuC,EAAA,EAAD,CACExB,OAAO,SACPyB,UAAQ,EACRC,WAAS,EACTvC,KAAK,WACLyC,MAAM,WACNI,KAAK,WACLL,GAAG,WACHE,aAAa,mBACbE,SAAU9C,KAEZ,SAACgD,EAAA,EAAD,CACED,KAAK,SACLN,WAAS,EACTN,QAAQ,YACRvB,GAAI,CAAE0B,GAAI,EAAGW,GAAI,GACjBC,SAAoB,KAAVtD,GAA6B,KAAbE,EAL5B,qBASA,SAACW,EAAA,GAAD,CAAMC,WAAS,EAACyC,eAAe,SAA/B,UACE,SAAC1C,EAAA,GAAD,CAAMO,MAAI,EAAV,UACE,SAAC,IAAD,CAAgBoC,GAAG,YAAnB,4DAWjB,C,4FClHYC,GAROC,EAAAA,GAAAA,KAAH,iIAIA,SAAAC,GAAC,OAAIA,EAAEjE,MAAMkE,MAAM,EAAlB,IACA,SAAAD,GAAC,OAAIA,EAAEjE,MAAMkE,MAAM,EAAlB,KAGWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kHAEX,SAAAC,GAAC,OAAIA,EAAEjE,MAAMoE,WAAWC,KAAvB,IAGJ,SAAAJ,GAAC,OAAIA,EAAEjE,MAAMsE,OAAOC,KAAnB,I","sources":["pages/Login/Login.jsx","pages/Register/Register.styled.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  createTheme,\n  ThemeProvider,\n  Paper,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { SwitchFormLink } from 'pages/Register/Register.styled';\nimport { authOperations } from 'redux/auth';\n\nconst theme = createTheme();\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"div\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n\n        <Grid\n          margin=\"0 auto\"\n          item\n          xs={12}\n          sm={8}\n          md={5}\n          component={Paper}\n          elevation={6}\n          sx={{\n            backgroundColor: '#e4830d',\n          }}\n          square\n        >\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: '#78756f' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Log in\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                onChange={handleChange}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handleChange}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                disabled={email === '' || password === ''}\n              >\n                Log In\n              </Button>\n              <Grid container justifyContent=\"center\">\n                <Grid item>\n                  <SwitchFormLink to=\"/register\">\n                    Don't have an account? Sign Up\n                  </SwitchFormLink>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  margin-left: ${p => p.theme.space[9]};\n  margin-right: ${p => p.theme.space[9]};\n`;\n\nexport const SwitchFormLink = styled(Link)`\n  font-family: 'Arial';\n  transition: ${p => p.theme.transition.color};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.white};\n  }\n`;\n"],"names":["theme","createTheme","Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","handleSubmit","e","preventDefault","authOperations","ThemeProvider","Grid","container","component","sx","height","CssBaseline","margin","item","xs","sm","md","Paper","elevation","backgroundColor","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","noValidate","onSubmit","mt","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","mb","disabled","justifyContent","to","SwitchFormLink","styled","p","space","Link","transition","color","colors","white"],"sourceRoot":""}